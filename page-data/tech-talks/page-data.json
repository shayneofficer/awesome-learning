{"componentChunkName":"component---src-templates-tech-talk-list-template-js","path":"/tech-talks","result":{"data":{"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/tech-talks/react-boston/guided-tour-of-react-hooks","categorySlug":null},"frontmatter":{"description":"Hooks offer a simple, concise way to write stateful React components without classes.\n\nIn this talk you'll learn about the \"magic\" behind how Hooks work and get to see a few examples of them in action. We'll cover the big four: useState, useEffect, useReducer, and useContext, plus how to write your very own custom hooks.\n\nYou may never want to write a class again.\n","title":"A Guided Tour of React Hooks"}},{"fields":{"slug":"/tech-talks/react-boston/accessibility-in-the-age-of-components","categorySlug":null},"frontmatter":{"description":"We often build component libraries to improve consistency, collaboration, and customization for a given product. \nBut what if a component library could also scale accessibility across the entire organization? \nBuilding accessible components can help distribute responsibility across all of design and engineering, \nwithout needing everyone to be an expert on the nitty-gritty details. \nIn this session, we'll go through specific component examples and use cases to help you and your team contribute \nto a better, more inclusive web.\n","title":"Accessibility in the Age of Components"}},{"fields":{"slug":"/tech-talks/react-boston/foundations-of-design-systems","categorySlug":null},"frontmatter":{"description":"Design systems are in the world around us, from street signs to the layouts of grocery stores, \nand our products are no exception. In this talk we'll delve into the world of Design Systems and \nlearn what they are and what it takes to build one.\n","title":"Foundations of Design Systems"}},{"fields":{"slug":"/tech-talks/react-boston/using-react-testing-library","categorySlug":null},"frontmatter":{"description":"If you had to rewrite your tests when writing a hook in your React application, then you’re writing tests wrong.\n\nreact-testing-library is what it sounds like, but more importantly, it encourages writing tests in the way that your end users will be using your components.\n\nIn this talk, I will first introduce react-testing-library, what it is, what it encourages, and what it does best. I’ll then dive into how to effectively test a react component, first a smaller component, then a \"larger\" component with redux, i18n dependencies, etc., then I will show all of the different APIs that react-testing-library provides, and how to effectively use them. Then, I’ll show how to write effective tests across an entire application (writing reusable, effective tests that are not brittle).\n","title":"Using React Testing Library to Write Stronger Tests"}}]}},"pageContext":{}},"staticQueryHashes":["784018950"]}